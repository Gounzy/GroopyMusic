{% extends "@App/YB/Members/base.html.twig" %}

{% block body %}
    <section class="container my-4 py-2 my-md-5 campaign-edit-section my-configurations">
        <h2>{{ campaign.getTitle }}</h2>
        <h2 style="font-size: 20px">Sélection de siège : {{ purchase }}</h2>
        {% if config.photo is not null %}
            <h2 style="font-size: 18px">Plan de salle :</h2>
            <div class="col-12">
                <h2><img class="img-fluid" src="{{ yb_asset(config.webPath(config.photo)) }}"/></h2>
            </div>
        {% endif %}
    </section>
    <section class="container my-4 py-2 my-md-5 campaign-edit-section my-configurations">
        {% for block in blocks %}
            <h2>{{ block.name }}</h2>
            {% if not block.isNotNumbered %}
                <div align-text="center" id="seat-map{{ block.id }}"></div>
            {% else %}
                <div>
                    Nombre de ticket voulu dans ce bloc :
                    <div class="input-group">
                        <span class="input-group-btn">
                            <button type="button" class="quantity-left-minus btn btn-dark btn-number retreat-quantity">
                                <i class="text-white fas fa-minus"></i>
                            </button>
                        </span>
                        <input type="number" style="width: 100px; text-align: center;" id="quantity-tix" value="0" readonly>
                        <span class="input-group-btn">
                            <button type="button" class="quantity-right-plus btn btn-dark btn-number add-quantity">
                                <i class="text-white fas fa-plus"></i>
                            </button>
                        </span>
                    </div>
                    <p>Vous pouvez encore avoir <span id="remainingTix" style="font-size: 20px">{{ purchase.quantity }}</span> ticket(s) dans ce bloc.</p>
                </div>
            {% endif %}
        {% endfor %}
        <br>
        <div class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Erreur</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Vous n'avez pas sélectionné assez de places</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                    </div>
                </div>
            </div>
        </div>
        <h2>
            <button class="btn-secondary btn book">Réserver</button>
        </h2>
    </section>
    <script src="//code.jquery.com/jquery.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var charts = new Map();
            var qtyMax = {{ purchase.quantity }};
            var remainingTicket = qtyMax;
            var soldTicket = 0;
            var selected = [];
            {% for block in blocks %}
                {% if not block.isNotNumbered %}
                    var sc = $('#seat-map{{ block.id }}').seatCharts({
                        map: {{ block.generateSeatChart|json_encode|raw }},
                        rows: {{ block.getSeatChartRow|json_encode|raw }},
                        seats: {
                            f: {
                                price: {{ purchase.counterpart.price }},
                            }
                        },
                        click: function () {
                            if (this.status() == 'available') {
                                if (remainingTicket > 0) {
                                    var fullName = this.settings.id + "_" + {{ block.id }};
                                    selected.push(fullName);
                                    remainingTicket--;
                                    soldTicket++;
                                    $('#remainingTix').text(remainingTicket);
                                    return 'selected';
                                } else {
                                    return this.style();
                                }
                            } else if (this.status() == 'selected') {
                                if (soldTicket > 0) {
                                    var j;
                                    for (j = 0; j < selected.length; j++) {
                                        var fullName = this.settings.id + "_" + {{ block.id }};
                                        if (selected[j] === fullName) {
                                            selected.splice(j, 1);
                                        }
                                    }
                                    remainingTicket++;
                                    soldTicket--;
                                    $('#remainingTix').text(remainingTicket);
                                }
                                return 'available';
                            } else if (this.status() == 'unavailable') {
                                //seat has been already booked
                                return 'unavailable';
                            } else {
                                return this.style();
                            }
                        }
                    });
                    {% for bookedSeat in block.bookedSeatList %}
                        sc.status("{{ bookedSeat }}", 'unavailable');
                    {% endfor %}
                    charts.set({{ block.id }}, sc);
                    $('.seatCharts-header').css('display', 'none');
                {% else %}
                    // TODO
                {% endif %}
            {% endfor %}

            $('.book').click(function () {
                if (selected.length == qtyMax) {
                    $.ajax({
                        url: "{{ path('yb_book_seats') }}",
                        type: "POST",
                        data: {
                            seats: selected,
                            purchase: {{ purchase.id }},
                            purchaseIndex: {{ purchaseIndex }} +1,
                        },
                        success: function (response) {
                            location.href = response;
                        },
                        error: function (err) {
                            console.log('Error');
                        }
                    });
                } else {
                    $('.modal').modal();
                }
            });

            setInterval(checkForAbortedBooking, 120000);

            $('.retreat-quantity').click(function(){
                var value = $('#quantity-tix').val();
                if (soldTicket > 0){
                    value = value - 1;
                    remainingTicket++;
                    soldTicket--;
                    $('#remainingTix').text(remainingTicket);
                    $('#quantity-tix').val(value);
                }
            });

            $('.add-quantity').click(function(){
                var value = $('#quantity-tix').val();
                if (remainingTicket > 0){
                    var decimal = parseInt((value + '').replace(/[^01]/gi, ''), 2);
                    decimal = decimal + 1;
                    remainingTicket--;
                    soldTicket++
                    $('#remainingTix').text(remainingTicket);
                    $('#quantity-tix').val(decimal);
                }
            });

            setInterval(function(){checkForOccupiedSeats(charts)}, 7000);
        });
        function checkForAbortedBooking() {
            $.ajax({
                url: "{{ path('yb_refresh_seats') }}",
                type: "POST",
                data: {
                    code: {{ code|json_encode|raw }}
                },
                success: function (response) {
                    console.log(response);
                },
                error: function (err) {
                    console.log('Error');
                }
            })
        }
        function checkForOccupiedSeats(charts){
            $.ajax({
                url: "{{ path('yb_occupied_seats') }}",
                type: "POST",
                data: {
                    purchase: {{ purchase.id }},
                    config: {{ config.id }}
                },
                success: function (bookedSeat) {
                    for(var i=0; i<bookedSeat.length; i++){
                        var arr = bookedSeat[i].split('_');
                        var blkToInt = parseInt(arr[2], 10);
                        var scbis = charts.get(blkToInt);
                        scbis.status(arr[0]+'_'+arr[1], 'unavailable');
                    }
                },
                error: function (err) {
                    console.log('Error');
                }
            })
        }
    </script>
{% endblock %}