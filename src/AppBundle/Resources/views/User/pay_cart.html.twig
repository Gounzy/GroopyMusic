{% extends "base.html.twig" %}

{% macro recap_zone(purchase, contract, promotional = false) %}
    <div class="content-box-content-zone">
        <table class="content-box-table">
            <tbody>
            {% if promotional %}
                <div class="um-label text-center"><strong>Promotion 3 + 1</strong></div>
            {% endif %}
                <tr>
                    <td class="contract-info-title">{{ 'pay_cart.recap.labels.counterpart'|trans|raw }}</td>
                    <td>{{ purchase.counterpart.name }}</td>
                </tr>
            <tr>
                <td class="contract-info-title">{{ 'pay_cart.recap.labels.concert'|trans|raw }}</td>
                <td>Festival de {{ contract.contractArtist.artist.artistname }}</td>
            </tr>
            <tr>
                <td class="contract-info-title">{{ 'pay_cart.recap.labels.date'|trans|raw }}</td>
                <td>{{ contract.contractArtist.dateConcert|date('d/m/Y') }}</td>
            </tr>
            <tr>
                <td class="contract-info-title">{{ 'pay_cart.recap.labels.quantity'|trans|raw }}</td>
                <td>{% if not promotional %}{{ purchase.quantityOrganic }}{% else %}{{ purchase.quantityPromotional }}{% endif %}</td>
            </tr>
            <tr>
                <td class="contract-info-title">{{ 'pay_cart.recap.labels.unitprice'|trans|raw }}</td>
                <td>{% if not promotional %}{{ purchase.counterpart.price }} €{% else %}0 €{% endif %}</td>
            </tr>
            </tbody>
        </table>
    </div>
{% endmacro %}

{% import _self as macros %}

{% block body %}

    <div class="container">

        <h3 class="mt-3 mb-5 text-center">{{ 'pay_cart.title'|trans|raw }}</h3>

        <div class="row">
            <div class="col-12 col-md-8 order-2 order-md-1">
                <div id="payment-intro">
                    {{ 'pay_cart.intro'|trans({'%firstName%':app.user.firstname, '%conditionsUrl%': path('conditions') ~ '#cgv'})|raw }}
                </div>

                <div>
                    <!-- Used to display Element errors -->
                    <div class="stripe-error alert alert-danger" role="alert"></div>
                    <div id="stripe-loader">
                        {{ hidden_loader() }}
                    </div>
                </div>

                <form method="post" action="{{ path('user_cart_payment_stripe') }}" id="payment-form">
                    <div class="form-row">
                        {% if error_conditions %}
                            <p class="alert alert-danger">{{ 'pay_cart.conditions.error'|trans|raw }}</p>
                        {% endif %}
                        <label class="custom-control custom-checkbox pr-3" for="accept_conditions">
                            <input type="checkbox" id="accept_conditions" name="accept_conditions" class="custom-control-input">
                            <span class="custom-control-indicator"></span>
                            <span class="custom-control-description">{{ 'pay_cart.conditions.label'|trans|raw }}</span>
                        </label>
                    </div>

                    <div class="form-row" id="card-form-row">
                        <div class="form-row form-group">
                            <div class="col-12">
                                <label class="custom-control custom-radio">
                                    <input type="radio" name="payment-method" value="credit-card" class="custom-control-input" checked="checked">
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-description">{{ 'pay_cart.methods.creditcard'|trans|raw }}</span>
                                </label>
                                <label class="custom-control custom-radio">
                                    <input type="radio" name="payment-method" value="debit-card" class="custom-control-input">
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-description">{{ 'pay_cart.methods.bancontact'|trans|raw }}</span>
                                </label>
                            </div>
                        </div>

                        <div class="content-box col-12">
                            <div class="content-box-content content-box-content-zones">

                                <div id="credit-card" class="payment-method w-100">
                                    <div class="col-12 content-box-content-zone">
                                        <h5>
                                            {{ 'pay_cart.proceed.creditcard.title'|trans|raw }} <a href="#" data-toggle="popover" title="{{ 'pay_cart.proceed.creditcard.popover.title'|trans|raw }}" data-content="{{ 'pay_cart.proceed.creditcard.popover.content'|trans|raw }}">{{ 'pay_cart.proceed.creditcard.popover.apparent'|trans|raw }}</a>
                                        </h5>
                                    </div>
                                    <div class="content-box-content-zone no-border">
                                        <div class="col-12 row">
                                            <div class="col-12">
                                                <label>
                                                    <div class="text-left contract-info-title">{{ 'pay_cart.proceed.creditcard.labels.creditcard'|trans|raw }}</div>
                                                    <div id="card-number-element" class="field"></div>
                                                </label>
                                            </div>
                                            <div class="col-12 col-md-5 mt-3">
                                                <label>
                                                    <div class="text-left contract-info-title">{{ 'pay_cart.proceed.creditcard.labels.exp'|trans|raw }}</div>
                                                    <div id="card-expiry-element" class="field"></div>
                                                </label>
                                            </div>
                                            <div class="col-12 col-md-5 mt-3">
                                                <label>
                                                    <div class="text-left contract-info-title">{{ 'pay_cart.proceed.creditcard.labels.cvc'|trans|raw }}</div>
                                                    <div id="card-cvc-element" class="field"></div>
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-12 text-center mt-5">
                                            <input type="submit" class="btn btn-primary" value="{{ 'pay_cart.proceed.creditcard.submit'|trans|raw }}" />
                                        </div>
                                    </div>
                                </div>

                                <div id="debit-card" class="form-row payment-method w-100" style="display:none;">
                                    <div class="col-12 content-box-content-zone">
                                        <h5>
                                           {{ 'pay_cart.proceed.bancontact.title'|trans|raw }} <a href="#" data-toggle="popover" title="{{ 'pay_cart.proceed.bancontact.popover.title'|trans|raw }}" data-content="{{ 'pay_cart.proceed.bancontact.popover.content'|trans|raw }}">{{ 'pay_cart.proceed.bancontact.popover.apparent'|trans|raw }}</a>
                                        </h5>
                                        <p>{{ 'pay_cart.proceed.bancontact.info'|trans|raw }}</p>
                                    </div>
                                    <div class="content-box-content-zone no-border">
                                        <div id="bc-card-element" class="text-center">
                                            <button type="button" class="btn btn-primary mt-3" id="choose-bancontact">
                                                {{ 'pay_cart.proceed.bancontact.submit'|trans|raw }}
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="col-12 col-md-4 order-1 order-md-2">
                <div class="content-box">
                    <div class="content-box-header">
                        <h3>{{ 'pay_cart.recap.title'|trans|raw }}</h3>
                    </div>
                    <div class="content-box-content-zones content-box-content">
                    {% set sum_tickets = 0 %}
                    {% for fan_contract in cart.contracts %}
                        {% for purchase in fan_contract.purchases %}
                            {{  macros.recap_zone(purchase, fan_contract, false) }}
                            {% set freeTickets = purchase.quantityPromotional %}
                            {% if freeTickets > 0 %}
                                {{ macros.recap_zone(purchase, fan_contract, true) }}
                            {% endif %}
                        {% endfor %}
                        {% set sum_tickets = sum_tickets + fan_contract.counterPartsQuantity %}
                    {% endfor %}
                        <div class="content-box-content-zone no-border">
                            <table class="content-box-table">
                                <tr class="no-border">
                                    <td class="contract-info-title big">Total pour {{ sum_tickets }} ticket{% if sum_tickets > 1 %}s{% endif %}</td>
                                    <td class="big font-weight-bold">{{ cart.amount }} €</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
  </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        hideError();

        var $loader = $('#stripe-loader .loader'); 
        var $loaderexplanation = $('#stripe-loader .loader-explanation');

        var amount = {{ cart.amount * 100}};

        $('#card-form-row').hide();
        $('#accept_conditions').change(function(){
            if(this.checked) {
                $('#card-form-row').show();
            }
            else {
                $('#card-form-row').hide();
            }
            $('.error-notice').alert('close');
        });

        $('input[type=radio]').change(function() {
            hideError();
            if ($(this).val() == 'debit-card') {
                $('.payment-method').hide();
                $('#debit-card').show();
            }
            else if ($(this).val() == 'credit-card') {
                $('.payment-method').hide();
                $('#credit-card').show();
            }
        });

        var stripe = Stripe('{{ stripe_api_public }}');
        var elements = stripe.elements();

        var style = {
            base: {
                color: '#32325D',
                fontWeight: 500,
                fontFamily: 'Source Code Pro, Consolas, Menlo, monospace',
                fontSize: '16px',
                fontSmoothing: 'antialiased'
            },
            invalid: {
                color: '#E25950',

                '::placeholder': {
                    color: '#ffa65d'
                }
            }
        };

        var elementClasses = {
            focus: 'focused',
            empty: 'empty',
            invalid: 'invalid'
        };

        // set publishable key for V2
        Stripe.setPublishableKey('{{ stripe_api_public }}');


        var cardNumberElement = elements.create('cardNumber', {
            style: style,
            classes: elementClasses,
            placeholder: 'Numéro de carte'
        });
        cardNumberElement.mount('#card-number-element');

        var cardExpiryElement = elements.create('cardExpiry', {
            style: style,
            classes: elementClasses,
            placeholder: 'MM/AA'
        });
        cardExpiryElement.mount('#card-expiry-element');

        var cardCvcElement = elements.create('cardCvc', {
            style: style,
            classes: elementClasses,
            placeholder: 'CVC'
        });
        cardCvcElement.mount('#card-cvc-element');

        $('#choose-bancontact').click(function(e) {
            e.preventDefault();
            displayLoader("{{ 'pay_cart.proceed.bancontact.pending'|trans|raw }}");
            scrollToLoader();

            stripe.createSource({
                type: 'bancontact',
                amount: amount,
                currency: 'eur',
                bancontact: {
                    preferred_language: 'fr'
                },
                owner: {
                    name: '{{ app.user.displayName }}',
                    email: '{{ app.user.email }}'
                },
                redirect: {
                    return_url: '{{ absolute_url(path('user_cart_payment_pending', {'contract_id': contract_fan.id})) }}'
                },
                statement_descriptor: 'Achat Un-Mute - contrat {{ contract_fan.id }}'
            }).then(function(result) {
                on3DSSource(result);
            });
        });

        function onToken(result) {
            if (result.token) {
                Stripe.source.create({
                    type: 'card',
                    token: result.token.id
                }, onCardSource);
            } else if (result.error) {
                displayForm();
                displayError(result.error.message);
            }
        }

        function onCardSource(status, result) {
            if(result.error) {
                displayForm();
                displayError(result.error.message);
            }

            if(result.card.three_d_secure == 'required') {
                displayLoader("{{ 'pay_cart.proceed.bancontact.pending'|trans|raw }}");
                stripe.createSource({
                    type: 'three_d_secure',
                    amount: amount,
                    currency: "eur",
                    three_d_secure: {
                        card: result.id
                    },
                    redirect: {
                        return_url: '{{ absolute_url(path('user_cart_payment_pending', {'contract_id': contract_fan.id})) }}'
                    }
                }).then(function(result) {on3DSSource(result)});
            }
            else {
                stripeTokenHandler(result);
            }
        }

        function on3DSSource(result) {
            if(result.error) {
                displayError("{{ 'pay_cart.proceed.threeds.error'|trans|raw }}");
            }
            else {
                hideError();
                displayLoader("{{ 'pay_cart.proceed.threeds.pending'|trans|raw }}");
                window.location.replace(result.source.redirect.url);

                $('#payment-intro').hide();
            }
        }

        function onChargeable3DS(status, source) {
            if (source.status == 'chargeable') {
                stripeTokenHandler(source);
            }
            // TODO translate
            else if (source.status == 'failed') {
                displayError("L'authentification 3D Secure de votre carte bancaire a échoué. Le paiement, ainsi que votre commande, sont annulés. Clickez <a href=\"{{ path('artist_contract', {'id': contract_fan.contractArtist.id}) }}\">ici</a> pour revenir en arrière. ");
            }
            else if (source.status != 'pending') {
                displayError("Une erreur inconnue s'est produite lors de l'authentification 3D Secure : " + source.status);
            }
        }

        $('#payment-form').submit(function(e) {
            e.preventDefault();
            // Disable the submit button to prevent repeat
            $('input[type="submit"]').prop('disabled', true);

            displayLoader();
            scrollToLoader();
            var extraDetails = {
                //name: '{{ app.user.displayName }}',
                //email: '{{ app.user.username }}'
            };
            stripe.createToken(cardNumberElement, extraDetails).then(onToken);
        });

        function scrollToLoader() {
            $('html, body').animate({
                scrollTop: $("#stripe-loader").offset().top - 300
            }, 500);
        }

        function displayLoader(html) {
            $loader.show();
            $('form').hide();
            hideError();
            if(html) {
                $loaderexplanation.html(html);
                $loaderexplanation.show();
            }
            else {
                $loaderexplanation.hide();
            }
        }

        function displayForm() {
            $('form').show();
            $loader.hide();
            $loaderexplanation.hide();
        }

        function displayError(html) {

            $('input[type="submit"]').prop('disabled', false);


            $('.stripe-error').html(html);
            $('.stripe-error').show();
            $loader.hide();
            $loaderexplanation.hide();
        }

        function hideError() {
            $('.stripe-error').hide();
        }

        function stripeTokenHandler(source) {

            $('#payment-intro').hide();
            displayLoader("{{ 'threeds.pending'|trans|raw }}");

            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeSource');
            hiddenInput.setAttribute('value', source.id);

            var hiddenInput2 = document.createElement('input');
            hiddenInput2.setAttribute('type', 'hidden');
            hiddenInput2.setAttribute('name', 'fancontract_id');
            hiddenInput2.setAttribute('value', '{{ contract_fan.id }}');

            var hiddenInput3 = document.createElement('input');
            hiddenInput3.setAttribute('type', 'hidden');
            hiddenInput3.setAttribute('name', 'amount');
            hiddenInput3.setAttribute('value', '' + amount);

            form.appendChild(hiddenInput);
            form.appendChild(hiddenInput2);
            form.appendChild(hiddenInput3);
            // Submit the form
            form.submit();
        }

    </script>


{% endblock %}