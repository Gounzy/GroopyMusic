{% set active_link = 'pp' %}

{% extends '@App/User/Artist/edit_profile_layout.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/dropzone.css') }}">
{% endblock %}

{% block artist_edit_profile_content %}
    <p>
        Vous pouvez ici mettre en ligne la photo de profil de {{ artist.artistname }}.
        Cette photo sera la première à apparaître sur les différents visuels de cet artiste sur Un-Mute.
        Veillez à ce qu'elle soit de bonne qualité et qu'elle ait des dimensions de type 4 (largeur) / 3 (longueur).
    </p>

    <div id="dropzone-1">
        <div id="artist_edit_pp" class="dropzone"></div>
    </div>

    <p class="mt-4">
        Vous souhaitez ajouter d'autres photos à votre artiste ? <a href="{{ path('artist_edit_photos', {'id': artist.id}) }}">Ajoutez-en jusqu'à 5</a>
    </p>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        $('document').ready(function() {
            var $ppzone =  $("div#artist_edit_pp");

            var mocks = [];
            {% if artist.profilepic is not null %}
                {% for photo in [artist.profilepic]  %}
                    mocks.push({
                        name: "{{ photo.filename }}",
                        url: "{{ absolute_url(asset(artist.webPath(photo))) }}",
                        size: 12345
                    });
                {% endfor %}
            {% endif %}

            $ppzone.dropzone({
                url: "{{ oneup_uploader_endpoint('artist_gallery') }}",
                resizeWidth: 1200,
                maxFiles: 1,
                addRemoveLinks: true,
                params: {
                    pp: 1,
                    artist: {{ artist.id }}
                },
                accept: function (file, done) {
                    console.log(file);
                    if ((file.type).toLowerCase() != "image/jpg" &&
                            (file.type).toLowerCase() != "image/gif" &&
                            (file.type).toLowerCase() != "image/jpeg" &&
                            (file.type).toLowerCase() != "image/png"
                    ) {
                        done("Invalid file");
                    }
                    else {
                        done();
                    }
                },
                removedfile: function(file) {
                    $.ajax({
                        method: 'get',
                        url: "{{ path('artist_ajax_remove_photo', {'id': artist.id}) }}",
                        data: {
                            filename: file.previewElement.querySelector("[data-dz-name]").innerHTML
                        },
                        complete: function() {
                            file.previewElement.remove();
                        }
                    });
                },
                init: function() {
                    var i = 0;
                    while(i < mocks.length) {
                        var mock = mocks[i];
                        mock.accepted = true;

                        this.files.push(mock);
                        this.createThumbnailFromUrl(mock, mock.url);
                        this.emit('addedfile', mock);
                        this.emit("thumbnail", mock, mock.url);
                        this.emit('complete', mock);
                        i++;
                    }
                    $ppzone.options.maxFiles = $ppzone.options.maxFiles - i;
                },
                success: function(file, serverResponse) {
                    file.previewElement.querySelector("[data-dz-name]").innerHTML = serverResponse.newfilename;
                }
            });
        });
    </script>
{% endblock %}