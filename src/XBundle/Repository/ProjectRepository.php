<?php

namespace XBundle\Repository;

use AppBundle\Entity\User;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends \Doctrine\ORM\EntityRepository
{

    public function baseQueryBuilder() {
        return $this->createQueryBuilder('p')
            ->leftJoin('p.artist', 'a')
            ->leftJoin('p.category', 'c')
            ->leftJoin('p.tags', 't')
            ->leftJoin('p.coverpic', 'cp')
            ->addSelect('a')
            ->addSelect('c')
            ->addSelect('t')
            ->addSelect('cp')
        ;
    }

    public function findValidatedProjects() {
        return $this->baseQueryBuilder()
            ->where('p.deleted = 0')
            ->andWhere('p.validated = 1')
            ->getQuery()
            ->getResult()
        ;
    }


    public function getCurrentProjects($user = null) {
        $qb = $this->createQueryBuilder('p');

        if($user instanceof User) {
            $qb
               ->join('p.handlers', 'u')
               ->addSelect('u')
               ->where('u.id = :id')
               ->setParameter('id', $user->getId());
        } else {
            $qb
               ->leftJoin('p.handlers', 'u')
               ->addSelect('u');
        }
        return $qb
            ->andWhere('p.dateEnd >= :now')
            ->andWhere('p.failed = 0')
            ->andWhere('p.deleted = 0')
            ->orderBy('p.dateEnd', 'ASC')
            ->setParameter('now', new \DateTime())
            ->getQuery()
            ->getResult()
        ;

        /*return $this->createQueryBuilder('p')
            ->join('p.user', 'u')
            ->where('u.id = :id')
            ->andWhere('p.dateEnd >= :now')
            ->andWhere('p.failed = 0')
            ->orderBy('p.dateCreation', 'ASC')
            ->setParameters([
                'id' => $user->getId(),
                'now' => new \DateTime()
            ])
            ->getQuery()
            ->getResult()
        ;*/
    }


    public function getPassedProjects(User $user) {
        return $this->createQueryBuilder('p')
            ->join('p.handlers', 'u')
            ->orderBy('p.dateEnd', 'DESC')
            ->where('u.id = :id')
            ->andWhere('p.dateEnd < :now')
            ->andWhere('p.validated = 1')
            ->andWhere('p.deleted = 0')
            ->setParameters([
                'id' => $user->getId(),
                'now' => new \DateTime()
            ])
            ->getQuery()
            ->getResult()
        ;
    }

}
