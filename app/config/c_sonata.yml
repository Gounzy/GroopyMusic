########################################################### Config
sonata_admin:
   title:      Un-Mute Admin
   title_logo: admin/images/logo.png
   templates:
       layout: "::sonata_admin_layout.html.twig"
   options:
       html5_validate: true
       use_select2: true
   dashboard:
       blocks:
           -
             position: left
             type: sonata.admin.block.admin_list
             settings:
               groups: [app.admin.group.user, app.admin.group.contact, app.admin.group.conditions, app.admin.group.content]
           -
             position: right
             type: sonata.admin.block.admin_list
             settings:
               groups: [app.admin.group.events, app.admin.group.orders, app.admin.group.user_management]

       groups:
           app.admin.group.user:
               label: app.admin.group.user
               label_catalogue: SonataAdminBundle
               items:
                   - AppBundle\Admin\UserAdmin
                   - AppBundle\Admin\ArtistAdmin
                   - AppBundle\Admin\SponsorshipInvitationAdmin

           app.admin.group.contact:
                label_catalogue: SonataAdminBundle
                items:
                  - AppBundle\Admin\SuggestionBoxAdmin
                  - AppBundle\Admin\SuggestionTypeEnumAdmin
                  - AppBundle\Admin\VIPInscriptionAdmin
                  - AppBundle\Admin\VolunteerProposalAdmin
                  - AppBundle\Admin\PropositionContractArtistAdmin
                  - AppBundle\Admin\MailAdmin


           app.admin.group.content:
                label: app.admin.group.content
                label_catalogue: SonataAdminBundle
                items:
                  - AppBundle\Admin\GenreAdmin
                  - AppBundle\Admin\ProvinceAdmin
                  - AppBundle\Admin\ContactPersonAdmin
                  - AppBundle\Admin\HallAdmin

           app.admin.group.user_management:
              label: app.admin.group.user_management
              label_catalogue: SonataAdminBundle
              items:
                - AppBundle\Admin\RankingAdmin
                - AppBundle\Admin\CategoryAdmin
                - AppBundle\Admin\LevelAdmin
                - AppBundle\Admin\RewardAdmin
                - AppBundle\Admin\User_RewardAdmin
                - AppBundle\Admin\RewardRestrictionAdmin
                - AppBundle\Admin\ConsomableTypeAdmin

           app.admin.group.conditions:
              label: app.admin.group.conditions
              label_catalogue: SonataAdminBundle
              items:
                - AppBundle\Admin\ConditionsAdmin

           app.admin.group.events:
               label: app.admin.group.events
               label_catalogue: SonataAdminBundle
               items:
                   - AppBundle\Admin\ContractArtistAdmin
                   - AppBundle\Admin\FestivalDayAdmin
                   - AppBundle\Admin\ArtistPerformanceAdmin
                   - AppBundle\Admin\CounterPartAdmin

           app.admin.group.orders:
               label: app.admin.group.orders
               label_catalogue: SonataAdminBundle
               items:
                   - AppBundle\Admin\ContractFanAdmin
                   - AppBundle\Admin\PaymentAdmin
               roles: [ROLE_PAYMENTS_ADMIN]

   assets:
      extra_javascripts:
         - bundles/ivoryckeditor/ckeditor.js
         - bundles/sonataformatter/vendor/markitup-markitup/markitup/jquery.markitup.js
         - bundles/sonataformatter/markitup/sets/markdown/set.js
         - bundles/sonataformatter/markitup/sets/html/set.js
         - bundles/sonataformatter/markitup/sets/textile/set.js
         - js/Admin/admin.js

      remove_javascripts:
        - bundles/sonatacore/vendor/select2/select2.min.js
        - bundles/sonatacore/vendor/select2/select2_locale_fr.js

      extra_stylesheets:
        - bundles/sonataformatter/markitup/skins/sonata/style.css
        - bundles/sonataformatter/markitup/sets/markdown/style.css
        - bundles/sonataformatter/markitup/sets/html/style.css
        - bundles/sonataformatter/markitup/sets/textile/style.css

      remove_stylesheets:
        - bundles/sonatacore/vendor/select2/select2.css
        - bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css

sonata_block:
     default_contexts: [cms]
     blocks:
         # enable the SonataAdminBundle block
         sonata.admin.block.admin_list:
            contexts: [admin]
         sonata.admin.block.stats:
            contexts:   [admin]
         sonata_translation.block.locale_switcher:
            contexts: [admin]

sonata_translation:
   locales: [fr, en]
   default_locale: "%locale%"
   knplabs:
     enabled: true

sonata_formatter:
    default_formatter: text
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.


        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

########################################################### Services
services:
    # Defaults, which will allow Symfony to use autowiring and autoconfiguring
    _defaults:
        autowire: true # automatically injects dependencies in the
        autoconfigure: true # automatically registers services as commands, event subscribers, etc.
        public: true

    AppBundle\Admin\SuggestionBoxAdmin:
        arguments: [~, AppBundle\Entity\SuggestionBox, AppBundle:SuggestionBoxAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.suggestionBox }
        public: true


    AppBundle\Admin\VIPInscriptionAdmin:
        arguments: [~, AppBundle\Entity\VIPInscription, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.VIPInscription }
        public: true

    AppBundle\Admin\UserAdmin:
        arguments: [~, AppBundle\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.user }
        public: true

    AppBundle\Admin\StepAdmin:
        arguments: [~, AppBundle\Entity\Step, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.step }
        public: true

    AppBundle\Admin\GenreAdmin:
        arguments: [~, AppBundle\Entity\Genre, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.genre }
        public: true

    AppBundle\Admin\PartnerAdmin:
        arguments: [~, AppBundle\Entity\Partner, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.partner }
        public: true

    AppBundle\Admin\ArtistAdmin:
        arguments: [~, AppBundle\Entity\Artist, AppBundle:ArtistAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.artist }
        public: true

    AppBundle\Admin\CartAdmin:
        arguments: [~, AppBundle\Entity\Cart, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.cart }
        public: true

    AppBundle\Admin\ContractArtistAdmin:
        arguments: [~, AppBundle\Entity\ContractArtist, AppBundle:ContractArtistAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.contractartist }
        public: true

    AppBundle\Admin\ContractArtistArtistAdmin:
        arguments: [~, AppBundle\Entity\ContractArtist_Artist, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.contractartistartist }
        public: true

    AppBundle\Admin\ContractFanAdmin:
        arguments: [~, AppBundle\Entity\ContractFan, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.contractfan }
        public: true

    AppBundle\Admin\PaymentAdmin:
        arguments: [~, AppBundle\Entity\Payment, AppBundle:PaymentAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.payment }
        public: true

    AppBundle\Admin\PurchaseAdmin:
        arguments: [~, AppBundle\Entity\Purchase, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.purchase }
        public: true

    AppBundle\Admin\PhaseAdmin:
        arguments: [~, AppBundle\Entity\Phase, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.phase }
        public: true

    AppBundle\Admin\ConcertPossibilityAdmin:
        arguments: [~, AppBundle\Entity\ConcertPossibility, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.concertpossibility }
        public: true

    AppBundle\Admin\HallAdmin:
        arguments: [~, AppBundle\Entity\Hall, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.hall }
        calls:
            - [ setTemplate, [edit, AppBundle:Admin/Hall:edit.html.twig]]
        public: true

    AppBundle\Admin\ContactPersonAdmin:
        arguments: [~, AppBundle\Entity\ContactPerson, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.contactperson }
        public: true

    AppBundle\Admin\AddressAdmin:
        arguments: [~, AppBundle\Entity\Address, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.address }
        public: true

    AppBundle\Admin\CounterPartAdmin:
        arguments: [~, AppBundle\Entity\CounterPart, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.counterpart }
        public: true

    AppBundle\Admin\ProvinceAdmin:
        arguments: [~, AppBundle\Entity\Province, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.province }
        public: true

    AppBundle\Admin\PartnerContactPersonAdmin:
        arguments: [~, AppBundle\Entity\Partner_ContactPerson, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.partnercontactperson }
        public: true

    AppBundle\Admin\SuggestionTypeEnumAdmin:
        arguments: [~, AppBundle\Entity\SuggestionTypeEnum, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.suggestiontypeenum }
        public: true

    AppBundle\Admin\PropositionContractArtistAdmin:
        arguments : [~, AppBundle\Entity\PropositionContractArtist, ~]
        tags :
            - { name: sonata.admin, manager_type: orm, label: app.admin.propositioncontractartist }
        public: true

    AppBundle\Admin\CategoryAdmin:
        arguments: [~, AppBundle\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.category }
        public: true

    AppBundle\Admin\LevelAdmin:
        arguments: [~, AppBundle\Entity\Level, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.level }
        public: true

    AppBundle\Admin\RankingAdmin:
        arguments: [ ~, null , AppBundle:RankingAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.ranking }
        public: true

    AppBundle\Admin\ConditionsAdmin:
        arguments: [ ~, AppBundle\Entity\Conditions , ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.conditions }
        public: true

    AppBundle\Admin\RewardRestrictionAdmin:
        arguments: [~, AppBundle\Entity\RewardRestriction, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.rewardrestriction }
        public: true

    AppBundle\Admin\RewardAdmin:
        arguments: [~, AppBundle\Entity\Reward, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.reward }
        calls:
            - [ setSubClasses,[{Invitation: AppBundle\Entity\InvitationReward, Consommation: AppBundle\Entity\ConsomableReward,Réduction: AppBundle\Entity\ReductionReward}]]
        public: true

    AppBundle\Admin\User_RewardAdmin:
        arguments: [~, AppBundle\Entity\User_Reward, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.userreward }
        public: true

    AppBundle\Admin\MailAdmin:
        arguments: [ ~, null , AppBundle:MailAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.mail }
        public: true

    AppBundle\Admin\ConsomableTypeAdmin:
        arguments: [~, AppBundle\Entity\ConsomableType, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.consomableType }
        public: true

    AppBundle\Admin\SponsorshipInvitationAdmin:
        arguments: [~, AppBundle\Entity\SponsorshipInvitation, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.sponsorshipInvitation }
        public: true

    AppBundle\Admin\VolunteerProposalAdmin:
        arguments: [~, AppBundle\Entity\VolunteerProposal, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.volunteerProposal }
        public: true

    AppBundle\Admin\FestivalDayAdmin:
        arguments: [~, AppBundle\Entity\FestivalDay, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.festivalDay }
        public: true

    AppBundle\Admin\ArtistPerformanceAdmin:
        arguments: [~, AppBundle\Entity\ArtistPerformance, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.artistPerformance }
        public: true