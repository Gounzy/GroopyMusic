########################################################### Config
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
        hall:
            providers:
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false


sonata_admin:
   title:      Un-Mute Admin
   title_logo: admin/images/logo.png
   templates:
       layout: "::sonata_admin_layout.html.twig"
   options:
       html5_validate: true
       use_select2: true
   dashboard:
       blocks:
           -
             position: left
             type: sonata.admin.block.admin_list
             settings:
               groups: [app.admin.group.user, app.admin.group.evolution, app.admin.group.content]
           -
             position: right
             type: sonata.admin.block.admin_list
             settings:
               groups: [app.admin.group.crowdfunding, app.admin.group.special, app.admin.group.payment]

       groups:
           app.admin.group.user:
               label: app.admin.group.user
               label_catalogue: SonataAdminBundle
               items:
                   - AppBundle\Admin\UserAdmin
                   - AppBundle\Admin\ArtistAdmin
                   - AppBundle\Admin\SuggestionBoxAdmin
           app.admin.group.evolution:
               label: app.admin.group.evolution
               label_catalogue: SonataAdminBundle
               items:
                   - AppBundle\Admin\PhaseAdmin
                   - AppBundle\Admin\StepAdmin
                   - AppBundle\Admin\CounterPartAdmin
           app.admin.group.content:
               label: app.admin.group.content
               label_catalogue: SonataAdminBundle
               items:
                   - AppBundle\Admin\GenreAdmin
                   #- AppBundle\Admin\PartnerAdmin
                   - AppBundle\Admin\ContactPersonAdmin
                   - AppBundle\Admin\HallAdmin
                   - sonata.media.admin.gallery
                   - sonata.media.admin.media
                   - AppBundle\Admin\ProvinceAdmin
           app.admin.group.crowdfunding:
               label: app.admin.group.crowdfunding
               label_catalogue: SonataAdminBundle
               items:
                   - AppBundle\Admin\ContractArtistAdmin
                   - AppBundle\Admin\ContractFanAdmin
                   - AppBundle\Admin\CartAdmin
           app.admin.group.special:
               label: app.admin.group.special
               label_catalogue: SonataAdminBundle
               items:
                   - AppBundle\Admin\SpecialAdvantageAdmin
                   - AppBundle\Admin\SpecialPurchaseAdmin
           app.admin.group.payment:
               label: app.admin.group.payment
               label_catalogue: SonataAdminBundle
               items:
                   - AppBundle\Admin\PaymentAdmin
               roles: [ROLE_PAYMENTS_ADMIN]

sonata_block:
     default_contexts: [cms]
     blocks:
         # enable the SonataAdminBundle block
         sonata.admin.block.admin_list:
            contexts: [admin]
         sonata.admin.block.stats:
            contexts:   [admin]
         sonata_translation.block.locale_switcher:
            contexts: [admin]

sonata_translation:
   locales: [fr, en]
   default_locale: "%locale%"
   knplabs:
     enabled: true

########################################################### Services
services:
    # Defaults, which will allow Symfony to use autowiring and autoconfiguring
    _defaults:
        autowire: true # automatically injects dependencies in the
        autoconfigure: true # automatically registers services as commands, event subscribers, etc.
        public: true

    AppBundle\Admin\SuggestionBoxAdmin:
        arguments: [~, AppBundle\Entity\SuggestionBox, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.suggestionBox }
        public: true

    AppBundle\Admin\UserAdmin:
        arguments: [~, AppBundle\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.user }
        public: true

    AppBundle\Admin\StepAdmin:
        arguments: [~, AppBundle\Entity\Step, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.step }
        public: true

    AppBundle\Admin\GenreAdmin:
        arguments: [~, AppBundle\Entity\Genre, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.genre }
        public: true

    AppBundle\Admin\PartnerAdmin:
        arguments: [~, AppBundle\Entity\Partner, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.partner }
        public: true

    AppBundle\Admin\ArtistAdmin:
        arguments: [~, AppBundle\Entity\Artist, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.artist }
        public: true

    AppBundle\Admin\CartAdmin:
        arguments: [~, AppBundle\Entity\Cart, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.cart }
        public: true

    AppBundle\Admin\ContractArtistAdmin:
        arguments: [~, AppBundle\Entity\ContractArtist, AppBundle:ContractArtistAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.contractartist }
        public: true

    AppBundle\Admin\ContractArtistArtistAdmin:
        arguments: [~, AppBundle\Entity\ContractArtist_Artist, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.contractartistartist }
        public: true

    AppBundle\Admin\ContractFanAdmin:
        arguments: [~, AppBundle\Entity\ContractFan, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.contractfan }
        public: true

    AppBundle\Admin\PaymentAdmin:
        arguments: [~, AppBundle\Entity\Payment, AppBundle:PaymentAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.payment }
        public: true

    AppBundle\Admin\PhaseAdmin:
        arguments: [~, AppBundle\Entity\Phase, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.phase }
        public: true

    AppBundle\Admin\SpecialAdvantageAdmin:
        arguments: [~, AppBundle\Entity\SpecialAdvantage, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.specialadvantage }
        public: true

    AppBundle\Admin\SpecialPurchaseAdmin:
        arguments: [~, AppBundle\Entity\SpecialPurchase, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.specialpurchase }
        public: true

    AppBundle\Admin\ConcertPossibilityAdmin:
        arguments: [~, AppBundle\Entity\ConcertPossibility, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.concertpossibility }
        public: true

    AppBundle\Admin\HallAdmin:
        arguments: [~, AppBundle\Entity\Hall, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.hall }
        public: true

    AppBundle\Admin\ContactPersonAdmin:
        arguments: [~, AppBundle\Entity\ContactPerson, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.contactperson }
        public: true

    AppBundle\Admin\AddressAdmin:
        arguments: [~, AppBundle\Entity\Address, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.address }
        public: true

    AppBundle\Admin\CounterPartAdmin:
        arguments: [~, AppBundle\Entity\CounterPart, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.counterpart }
        public: true

    AppBundle\Admin\ProvinceAdmin:
        arguments: [~, AppBundle\Entity\Province, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: app.admin.province }
        public: true