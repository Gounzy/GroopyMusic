imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: azine.yml }
    - { resource: sonata.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    mailer_from_name: "Un-Mute"

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection:
            enabled: true
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        name: "%session.name%"
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets:
      version: "%assets_version%"
    php_errors:
        log: true


# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
      - 'TetranzSelect2EntityBundle:Form:fields.html.twig'
      - ':Form:jquery.collection.html.twig'
      - ':Form:bootstrap_4_horizontal_layout.html.twig'
    globals:
      fos_csrf_provider: "@security.csrf.token_manager"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
          json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
          default:
            auto_mapping: true
            naming_strategy: doctrine.orm.naming_strategy.underscore

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations
    organize_migrations: "BY_YEAR_AND_MONTH" # Version >=1.2 Possible values are: "BY_YEAR", "BY_YEAR_AND_MONTH", false

knp_doctrine_behaviors:
  translatable: true

a2lix_translation_form:
  locale_provider: default
  locales: [fr, en, nl]
  default_locale : "%locale%"
  required_locales: ["%locale%"]
  templating: "A2lixTranslationFormBundle::default.html.twig"

# Swiftmailer Configuration
swiftmailer:
    transport:  "%mailer_transport%"
    spool:      { type: memory }
    host:       "%mailer_host%"
    port:       "%mailer_port%"
    auth_mode:  "%mailer_auth_mode%"
    encryption: "%mailer_encryption%"
    username:   "%mailer_user%"
    password:   "%mailer_password%"

# friendsofsymfony/userbundle
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User
    service:
        mailer: azine_email.default.template_twig_swift_mailer
    registration:
        form:
            type: AppBundle\Form\RegistrationType
           # validations_groups: [AppRegistration] # see https://stackoverflow.com/questions/8832916/remove-replace-the-username-field-with-email-using-fosuserbundle-in-symfony2
        confirmation:
            enabled: true
            template: AppBundle:Mail/User:registration_confirmation.txt.twig
    profile:
        form:
          type: AppBundle\Form\ProfileType
         # validation_groups: [AppProfile] # see https://stackoverflow.com/questions/8832916/remove-replace-the-username-field-with-email-using-fosuserbundle-in-symfony2
    from_email:
        address:        "%mailer_from_address%"
        sender_name:    "%mailer_from_name%"
    resetting:
        email:
            template:  AppBundle:Mail/User:password_resetting.txt.twig

# Assetic config
assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    #node: "%path_to_node%"
    filters:
        cssrewrite: ~
        jsqueeze: ~
        #uglifyjs2:
        #    bin: "%path_to_uglifyjs%"
        #uglifycss:
        #    bin: "%path_to_uglifycss%"
        scssphp:
            formatter: 'Leafo\ScssPhp\Formatter\Compressed'
    bundles:
        - FpJsFormValidatorBundle
        - AppBundle
        - FOSUserBundle


jms_i18n_routing:
    default_locale: "%locale%"
    locales: [fr]
    strategy: prefix_except_default

jms_translation:
  configs:
    routes:
      dirs: [%kernel.root_dir%, %kernel.root_dir%/../src]
      output_dir: "%kernel.root_dir%/Resources/translations"
      output_format: xliff
      excluded_dirs: [Tests]
      extractors: [jms_i18n_routing]
      domain: routes # run php bin/console translation:extract en --config=routes --output-format=xliff

tetranz_select2_entity:
    minimum_input_length: 0
    page_limit: 8
    allow_clear: false
    delay: 500
    language: "%locale%"
    cache: false
    cache_timeout: 0
    scroll: false

oneup_uploader:
    mappings:
        artist_gallery:
            frontend: dropzone # or any uploader you use in the frontend
            namer: AppBundle\Services\ArtistPhotoUploadNamer
        hall_gallery:
            frontend: dropzone
            namer: AppBundle\Services\HallPhotoUploadNamer

vich_uploader:
    db_driver: orm
    mappings:
      hall_technical_specs:
          uri_prefix:         uploads/hall_technicalspecs
          upload_destination: '%kernel.root_dir%/../web/uploads/hall_technicalspecs'
          delete_on_update:   true
          delete_on_remove:   true
          inject_on_load:     false
          namer:
            service: vich_uploader.namer_property
            options: { property: 'technicalSpecsFileName'}

jmose_command_scheduler:
    log_path: '%kernel.root_dir%/../var/logs/commands/'

cspoo_swiftmailer_mailgun:
    key: "%mailgun_api_secret%"
    domain: "%mailgun_domain%"
    http_client: ~ # Optional. Defaults to null and uses discovery to find client.